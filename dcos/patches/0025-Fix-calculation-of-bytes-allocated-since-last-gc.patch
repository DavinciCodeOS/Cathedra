From e1f05cf63751a1e0aad30e6e650645045ec7acdb Mon Sep 17 00:00:00 2001
From: Fujiang Wang <wangfujiang@oppo.corp-partner.google.com>
Date: Fri, 1 Oct 2021 07:32:13 +0000
Subject: [PATCH 4/4] Fix calculation of bytes allocated since last gc

The GC freebytes calculation does not include LargeObject freebytes.

Change-Id: I9cee7b1c8a0a15c13056c9c5bd00160671bee339
---
 runtime/gc/heap.cc | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/runtime/gc/heap.cc b/runtime/gc/heap.cc
index 1817eb1fa4..07b7aaacf4 100644
--- a/runtime/gc/heap.cc
+++ b/runtime/gc/heap.cc
@@ -2722,7 +2722,6 @@ collector::GcType Heap::CollectGarbageInternal(collector::GcType gc_type,
   // Grow the heap so that we know when to perform the next GC.
   GrowForUtilization(collector, bytes_allocated_before_gc);
   old_native_bytes_allocated_.store(GetNativeBytes());
-  num_bytes_alive_after_gc_ = bytes_allocated_before_gc - current_gc_iteration_.GetFreedBytes();
   LogGC(gc_cause, collector);
   FinishGC(self, gc_type);
   // Actually enqueue all cleared references. Do this after the GC has officially finished since
@@ -3645,6 +3644,9 @@ void Heap::GrowForUtilization(collector::GarbageCollector* collector_ran,
       const uint64_t freed_bytes = current_gc_iteration_.GetFreedBytes() +
           current_gc_iteration_.GetFreedLargeObjectBytes() +
           current_gc_iteration_.GetFreedRevokeBytes();
+      // Records the number of bytes allocated at the time of GC finish,excluding the number of
+      // bytes allocated during GC.
+      num_bytes_alive_after_gc_ = UnsignedDifference(bytes_allocated_before_gc, freed_bytes);
       // Bytes allocated will shrink by freed_bytes after the GC runs, so if we want to figure out
       // how many bytes were allocated during the GC we need to add freed_bytes back on.
       // Almost always bytes_allocated + freed_bytes >= bytes_allocated_before_gc.
-- 
2.36.1

